name: 'OpenAtlas Github Tests'
on:
  push: {}
jobs:
  build_openatlas:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create tags based on git data
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}/container-preview
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{sha}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./install
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  test_openatlas:
    runs-on: ubuntu-latest
    needs: [build_openatlas]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create openatlas network
        run: |
          docker network create --internal openatlas

      - name: Create postgis container
        run: |
          docker run -d -e POSTGRES_PASSWORD=verysecret -e POSTGRES_DB=openatlas_test -e POSTGRES_USER=openatlas --name postgres --network openatlas postgis/postgis:13-3.3

      - name: Wait
        run: sleep 8

      - name: Create openatlas container and run tests
        run: |
          docker create -e OVERWRITE_DATABASE=TRUE -e POSTGRES_PASSWORD=verysecret -e POSTGRES_DB=openatlas_test -e POSTGRES_USER=openatlas -e POSTGRES_HOST=postgres --name openatlas --network openatlas ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/container-preview:${{ github.ref_name }}
          set -x
          cat <<EOF > testing.py
          DATABASE_NAME='openatlas_test'
          DATABASE_USER='openatlas'
          DATABASE_HOST='postgres'
          DATABASE_PORT=5432
          DATABASE_PASS='verysecret'
          MAIL_PASSWORD='asdQWEtzu123'
          SECRET_KEY='$COOKIE_KEY'  # Used for cookies
          IS_UNIT_TEST = True
          DEBUG = True
          EOF
          cat <<EOF > production.py
          DATABASE_NAME='openatlas_test'
          DATABASE_USER='openatlas'
          DATABASE_HOST='postgres'
          DATABASE_PORT=5432
          DATABASE_PASS='verysecret'
          MAIL_PASSWORD='asdQWEtzu123'
          SECRET_KEY='$COOKIE_KEY'  # Used for cookies
          IS_UNIT_TEST = True
          DEBUG = True
          EOF
          sudo chown 33:33 production.py testing.py
          docker exec openatlas rm -rf /var/www/openatlas/instance/production.py
          docker cp -a production.py openatlas:/var/www/openatlas/instance/
          docker cp -a testing.py openatlas:/var/www/openatlas/instance/
          docker start openatlas
          until [ "$(docker inspect -f {{.State.Running}} openatlas)"=="true" ]; do
              sleep 0.1;
          done;
          docker exec -i openatlas /bin/bash -c "cd /var/www/openatlas/instance/ && ls -la && cat production.py && cat testing.py"

      - name: Run tests
        run: |
          docker exec -i openatlas /bin/bash -c "cd /var/www/openatlas/tests && nosetests3 --config=.noserc --verbosity=2 --nologcapture --nocapture && echo passed"
