{{- if eq .Values.postgis.deploy true -}}
{{- $_ := set . "namePrefix" "postgres" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "labels" . | nindent 4 }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
  name: {{ template "fullname" . }}-postgres
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      {{- include "selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        {{- include "selectorLabels" . | nindent 8 }}
    spec:
      affinity: {}
      containers:
        - envFrom:
            - configMapRef:
                name: {{ template "fullname" . }}-configmap
                optional: false
            - secretRef:
                name: {{ template "fullname" . }}-secret
                optional: false
          image: 'postgis/postgis:{{ .Values.postgis.version }}'
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
            - containerPort: 5432
              name: postgres
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          resources: {}
          startupProbe:
            failureThreshold: 6
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgis
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: postgis
          persistentVolumeClaim:
            claimName: {{ print ( include "fullname" . ) "-postgis"| quote }}
{{- $_ := unset . "namePrefix" -}}
{{- end -}}