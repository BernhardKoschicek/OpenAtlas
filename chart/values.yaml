# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

postgis:
  deploy: true
  # Set host if database is external
  #  host: postgres
  name: openatlas-test
  user: openatlas
  password: openatlas
  version: "13-3.3"

service:
  name: "web"
  type: ClusterIP
  externalPort: 8080
  internalPort: 8080
  enabled: true
  url: oa-helm.acdh-cluster-2.arz.oeaw.ac.at

ingress:
  enabled: true
  path: "/"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: 1m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "30"
  tls:
    enabled: true
    acme: false
livenessProbe:
  path: "/"
  initialDelaySeconds: 15
  timeoutSeconds: 15
  scheme: "HTTP"
  probeType: "httpGet"
readinessProbe:
  path: "/"
  initialDelaySeconds: 5
  timeoutSeconds: 3
  scheme: "HTTP"
  probeType: "httpGet"

cronjobs:
  backup:
    schedule: "0 3 * * *"
    command: ["/bin/bash"]
    args: ["-c", "/var/www/openatlas/install/backup_script.sh /backup"]
    livenessProbe:
      command: ["/bin/true"]
      probeType: "exec"
      initialDelaySeconds: 5
      timeoutSeconds: 3
      failureThreshold: 3
      periodSeconds: 10
    readinessProbe:
      probeType: "exec"
      command: ["/bin/true"]
      initialDelaySeconds: 5
      timeoutSeconds: 3
      failureThreshold: 3
      periodSeconds: 10
    extraVolumes:
      - mountPath: /var/www/openatlas/files/uploads
        name: uploads
      - mountPath: /var/www/openatlas/files/processed_images/resized
        name: processed-images
      - mountPath: /var/www/openatlas/files/export/
        name: export
      - mountPath: /backup
        name: backup
    extraVolumeMounts:
      - name: backup
        persistentVolumeClaim:
          claimName: "openatlas-backup"
         # storageClass: "backup"

storage:
  export:
    size: 1Gi
  processedImages:
    size: 10Gi
  uploads:
    size: 10Gi
  postgis:
    size: 10Gi

replicaCount: 1

image:
  repository: ghcr.io/acdh-oeaw/openatlas/container-preview
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "2611a64"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

application: {}

prometheus: {}

# extraLabels:
#   "ID": "$service_id"
# gitlab:
#   app: "$app_name"
#   envURL: "$repo_url
